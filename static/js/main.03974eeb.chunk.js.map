{"version":3,"sources":["components/jumbotron.js","components/form.js","components/employeeRow.js","components/table.js","utils/API.js","App.js","index.js"],"names":["Jumbotron","className","Form","clearFilters","sortBy","filterBy","useState","sortByValue","setSortByValue","setFilterByGender","for","onChange","event","target","value","id","disabled","selected","column","onClick","EmployeeCard","employeeData","imgUrl","firstName","lastName","gender","age","city","state","hidden","src","alt","Table","console","log","employeeCards","setEmployeeCards","useEffect","generateCards","cards","forEach","employee","push","key","scope","API","getEmployees","count","a","employees","i","axios","get","then","user","data","results","formattedData","picture","medium","name","first","last","dob","location","catch","error","App","setEmployees","preventDefault","map","sortedArray","sort","nextEmployee","toUpperCase","filters","filteredArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03974eeb.chunk.js","sourcesContent":["function Jumbotron() {\n\n    return (\n        <div className=\"jumbotron text-center\">\n            <h1 className=\"display-4\">My Employee Directory</h1>\n        </div>\n    )\n}\n\nexport default Jumbotron;","import { useState } from \"react\";\n\nfunction Form({ clearFilters, sortBy, filterBy }) {\n\n    const [sortByValue, setSortByValue] = useState();\n    const [filterByGender, setFilterByGender] = useState();\n\n\n    function handleClearFilters(event) {\n        setFilterByGender();\n        clearFilters(event);\n    }\n    \n    function handleSortByChange(event) {\n        setSortByValue(event.target.value);\n        sortBy(event.target.value);\n    }\n\n    function handleFilterBy(event) {\n        clearFilters(event);\n\n        filterBy([{column: \"gender\", value: event.target.value}])\n    }\n\n    return (\n        <form className=\"p-3\">\n            <div className=\"form-group\">\n                <label className=\"mr-2\" for=\"sortBy\">Sort By: (Updates on filter change)</label>\n                <select onChange={handleSortByChange} value={sortByValue} className=\"custom-select my-1 mr-sm-2\" id=\"sortBy\">\n                    <option disabled selected>Choose Column...</option>\n                    <option value=\"firstName\">First Name</option>\n                    <option value=\"lastName\">Last Name</option>\n                    <option value=\"gender\">Gender</option>\n                    <option value=\"age\">Age</option>\n                    <option value=\"city\">City</option>\n                    <option value=\"state\">State</option>\n                </select>\n            </div>\n\n            <label className=\"mr-2\" for=\"asdf\">Filter By:</label>\n            <div className=\"form-row\">\n\n                <div className=\"form-group col-sm\">\n                    <select onChange={handleFilterBy} className=\"custom-select my-1 mr-sm-2\" id=\"asdf\">\n                        <option disabled selected>Gender</option>\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                    </select>\n                </div>\n\n                {/* <div className=\"form-group col-sm\">\n                    <select className=\"custom-select my-1 mr-sm-2\" id=\"inlineFormCustomSelectPref\">\n                        <option disabled selected>City</option>\n                        <option value=\"1\">Seattle</option>\n                    </select>\n                </div>\n\n                <div className=\"form-group col-sm\">\n                    <select className=\"custom-select my-1 mr-sm-2\" id=\"inlineFormCustomSelectPref\">\n                        <option disabled selected>State</option>\n                        <option value=\"1\">Seattle</option>\n                    </select>\n                </div> */}\n\n                <div className=\"form-group col-sm my-1\">\n                    <button onClick={handleClearFilters} className=\"btn btn-primary\">Clear Filters</button>\n                </div>\n\n            </div>\n\n        </form>\n    )\n}\n\nexport default Form;","function EmployeeCard({ employeeData: { imgUrl, firstName, lastName, gender, age, city, state, hidden } }) {\n\n    return (\n        <tr className={hidden ? \"d-none\" : null}>\n            <td><img src={imgUrl} alt=\"thumbnail of employee\" /></td>\n            <td>{firstName}</td>\n            <td>{lastName}</td>\n            <td>{gender}</td>\n            <td>{age}</td>\n            <td>{city}</td>\n            <td>{state}</td>\n        </tr>\n    )\n}\n\nexport default EmployeeCard;","import { useEffect, useState } from \"react\";\nimport EmployeeRow from \"./employeeRow\";\n\nfunction Table({ employeeData }) {\n    console.log(\"table.js rendered, employeeData: \", employeeData)\n\n    const [employeeCards, setEmployeeCards] = useState();\n\n    useEffect(() => {\n        \n        // Generate cards only if there are no cards and if there is data\n        console.log(\"employeeData? \", employeeData ? true : false);\n        if (employeeData) { generateCards() }\n    }, [employeeData])\n\n    const generateCards = () => {\n        let cards = [];\n        console.log(\"generating cards...\");\n        employeeData.forEach(employee => {\n            cards.push(\n                <EmployeeRow employeeData={employee} key={employee.key}/>\n            )\n        })\n\n        setEmployeeCards(cards);\n    }\n\n    return (\n        <table className=\"table table-hover table-responsive-md\">\n            <thead>\n                <tr>\n                    <th scope=\"col\"></th>\n                    <th scope=\"col\">First</th>\n                    <th scope=\"col\">Last</th>\n                    <th scope=\"col\">Gender</th>\n                    <th scope=\"col\">Age</th>\n                    <th scope=\"col\">City</th>\n                    <th scope=\"col\">State</th>\n                </tr>\n            </thead>\n            <tbody>\n                {employeeCards}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table;","import axios from \"axios\";\n\nconst API = {\n    getEmployees: async (count) => {\n        let employees = [];\n\n        for (let i = 0; i < count; i++) {\n\n            await axios\n                .get(\"https://randomuser.me/api/\")\n                .then(({ data: { results } }) => {\n                    const user = results[0];\n\n                    const formattedData = {\n                        imgUrl: user.picture.medium,\n                        firstName: user.name.first,\n                        lastName: user.name.last,\n                        gender: user.gender,\n                        age: user.dob.age,\n                        city: user.location.city,\n                        state: user.location.state,\n                        hidden: false,\n                        key: i\n                    }\n                    \n                    employees.push(formattedData);\n                    return formattedData;\n\n                })\n                .catch((error) => {\n                    throw error;\n                })\n        }\n\n        console.log(\"Employees: \", employees)\n        return employees;\n    }\n}\n\nexport default API;","import Jumbotron from \"./components/jumbotron\";\nimport Form from \"./components/form\"\nimport Table from \"./components/table\";\nimport { useState, useEffect } from \"react\";\nimport API from \"./utils/API\";\n\nfunction App() {\n\n  const [employees, setEmployees] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"useEffect() called!\")\n    if (!employees) {\n      API\n        .getEmployees(20)\n        .then((data) => {\n          console.log(\"Data sent to setEmployees: \", data)\n          // sortBy(data, \"firstName\");\n          // filterBy(data, \"gender\", \"female\");\n          setEmployees(data);\n        })\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const sortBy = (column) => {\n    console.log(\"Before sortBy, data: \", employees)\n    console.log(\"Sorting by: \", column)\n\n    const sortedArray = employees.sort((employee, nextEmployee) => {\n      console.log(\"Sort Loop\")\n      // Determine column type and sort accordingly\n      if (typeof employee[column] === \"number\") {\n\n        return employee[column] - nextEmployee[column]\n\n      } else if (typeof employee[column] === \"string\") {\n\n        const employeeStr = employee[column].toUpperCase();\n        const nextEmployeeStr = nextEmployee[column].toUpperCase();\n\n        if (employeeStr > nextEmployeeStr) {\n          return 1;\n        } else {\n          return -1;\n        }\n      }\n    });\n\n    console.log(\"sortedArray: \", sortedArray);\n\n    // setEmployees(sortedArray)\n\n  };\n\n  const filterBy = (filters) => {\n    console.log(\"filterBy employees state: \", employees);\n    let filteredArray = employees;\n    console.log(\"filters: \", filters)\n    filters.forEach(({ column, value }) => {\n\n      filteredArray = filteredArray.map(employee => {\n        console.log(\"Filter Loop\")\n        if (employee[column] !== value) {\n          employee.hidden = true;\n        }\n\n        return employee;\n      });\n\n    });\n\n    setEmployees(filteredArray);\n\n    console.log(\"filteredArray: \", filteredArray);\n  }\n\n  const clearFilters = (event) => {\n    console.log(\"clearFilters called.\")\n    event.preventDefault()\n\n    setEmployees(\n      employees.map(employee => {\n        employee.hidden = false;\n        return employee;\n      })\n    )\n  }\n\n  return (\n    <div>\n      <Jumbotron />\n      <div className=\"container\">\n        <Form\n          clearFilters={clearFilters}\n          sortBy={sortBy}\n          filterBy={filterBy}\n        />\n        <Table\n          employeeData={employees}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}